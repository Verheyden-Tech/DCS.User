<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DCS.User.UI</name>
    </assembly>
    <members>
        <member name="T:DCS.User.UI.GroupViewModel">
            <summary>
            Represents the ViewModel for the <see cref="T:DCS.User.Group"/> model. Implements the <see cref="T:DCS.CoreLib.BaseClass.ViewModelBase`2"/> class.
            </summary>
        </member>
        <member name="M:DCS.User.UI.GroupViewModel.#ctor(DCS.User.Group)">
            <summary>
            Default constructor initialize a new instance of <see cref="T:DCS.User.UI.GroupViewModel"/>.
            </summary>
            <param name="group">Instance of <see cref="T:DCS.User.Group"/>.</param>
        </member>
        <member name="M:DCS.User.UI.GroupViewModel.Save">
            <summary>
            Saves the current instance of the <see cref="T:DCS.User.UI.GroupViewModel"/> class.
            </summary>
            <returns>True if the save was successful; otherwise, false.</returns>
        </member>
        <member name="M:DCS.User.UI.GroupViewModel.GetAllActiveGroups">
            <summary>
            Gets all available active groups from the table.
            </summary>
            <returns>All avialable active groups from the table.</returns>
        </member>
        <member name="P:DCS.User.UI.GroupViewModel.Guid">
            <summary>
            Group unique identifier.
            </summary>
        </member>
        <member name="P:DCS.User.UI.GroupViewModel.Ident">
            <summary>
            Group ident.
            </summary>
        </member>
        <member name="P:DCS.User.UI.GroupViewModel.Name">
            <summary>
            Group name.
            </summary>
        </member>
        <member name="P:DCS.User.UI.GroupViewModel.Description">
            <summary>
            Group description.
            </summary>
        </member>
        <member name="P:DCS.User.UI.GroupViewModel.IsActive">
            <summary>
            Group is active flag.
            </summary>
        </member>
        <member name="P:DCS.User.UI.GroupViewModel.UserGuid">
            <summary>
            Group creator user unique identifier.
            </summary>
        </member>
        <member name="P:DCS.User.UI.GroupViewModel.CreationDate">
            <summary>
            Group creation date.
            </summary>
        </member>
        <member name="P:DCS.User.UI.GroupViewModel.LastManipulation">
            <summary>
            Group properties last time changed date.
            </summary>
        </member>
        <member name="T:DCS.User.UI.OrganisationViewModel">
            <summary>
            Represents the view model for the <see cref="T:DCS.User.Organisation"/> model. Implements the <see cref="T:DCS.CoreLib.BaseClass.ViewModelBase`2"/> class.
            </summary>
        </member>
        <member name="M:DCS.User.UI.OrganisationViewModel.#ctor(DCS.User.Organisation)">
            <summary>
            Default constructor initialize a new instance of <see cref="T:DCS.User.UI.OrganisationViewModel"/>.
            </summary>
        </member>
        <member name="M:DCS.User.UI.OrganisationViewModel.Save">
            <summary>
            Saves the current instance of the <see cref="T:DCS.User.UI.OrganisationViewModel"/> class.
            </summary>
            <returns>True if the save was successful; otherwise, false.</returns>
        </member>
        <member name="M:DCS.User.UI.OrganisationViewModel.GetAllActiveOrganisations">
            <summary>
            Gets all available active organisations from the table.
            </summary>
            <returns>All avialable active organisations from the table.</returns>
        </member>
        <member name="P:DCS.User.UI.OrganisationViewModel.Guid">
            <summary>
            Organisation unique identifier.
            </summary>
        </member>
        <member name="P:DCS.User.UI.OrganisationViewModel.Ident">
            <summary>
            Organisation ident.
            </summary>
        </member>
        <member name="P:DCS.User.UI.OrganisationViewModel.Name">
            <summary>
            Organisation name.
            </summary>
        </member>
        <member name="P:DCS.User.UI.OrganisationViewModel.Description">
            <summary>
            Organisation description.
            </summary>
        </member>
        <member name="P:DCS.User.UI.OrganisationViewModel.IsActive">
            <summary>
            Organisation is active flag.
            </summary>
        </member>
        <member name="P:DCS.User.UI.OrganisationViewModel.UserGuid">
            <summary>
            Organisation creator user unique identifier.
            </summary>
        </member>
        <member name="P:DCS.User.UI.OrganisationViewModel.CreationDate">
            <summary>
            Organisation creation date.
            </summary>
        </member>
        <member name="P:DCS.User.UI.OrganisationViewModel.LastManipulation">
            <summary>
            Organisation properties last time changed date.
            </summary>
        </member>
        <member name="T:DCS.User.UI.RegistrateUserViewModel">
            <summary>
            ViewModel for the <see cref="M:DCS.User.UI.RegistrateUserViewModel.RegistrateUser"/> view.
            </summary>
        </member>
        <member name="M:DCS.User.UI.RegistrateUserViewModel.#ctor">
            <summary>
            Default constructor initialize a new instance of <see cref="T:DCS.User.UI.RegistrateUserViewModel"/>.
            </summary>
        </member>
        <member name="M:DCS.User.UI.RegistrateUserViewModel.#ctor(DCS.User.User)">
            <summary>
            Initialize a new instance of <see cref="T:DCS.User.UI.RegistrateUserViewModel"/> with a given user.
            </summary>
            <param name="user">Selected user.</param>
        </member>
        <member name="M:DCS.User.UI.RegistrateUserViewModel.RegistrateUser">
            <summary>
            Register a new user.
            </summary>
            <returns>Returns true if the registtration was successful, otherwise false.</returns>
        </member>
        <member name="P:DCS.User.UI.RegistrateUserViewModel.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
        </member>
        <member name="P:DCS.User.UI.RegistrateUserViewModel.PassWord">
            <summary>
            Gets or sets the password of the user.
            </summary>
        </member>
        <member name="P:DCS.User.UI.RegistrateUserViewModel.Domain">
            <summary>
            Gets or sets the domain name of the user.
            </summary>
        </member>
        <member name="P:DCS.User.UI.RegistrateUserViewModel.IsAdmin">
            <summary>
            Gets or sets the flag if the user has admin rights.
            </summary>
        </member>
        <member name="P:DCS.User.UI.RegistrateUserViewModel.IsADUser">
            <summary>
            Gets or sets the flag if the user is a local user.
            </summary>
        </member>
        <member name="P:DCS.User.UI.RegistrateUserViewModel.KeepLoggedIn">
            <summary>
            Gets or sets the flag if the user shall be keep logged in.
            </summary>
        </member>
        <member name="T:DCS.User.UI.UserLoginViewModel">
            <summary>
            ViewModel for the <see cref="T:DCS.User.UI.UserLogin"/>.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserLoginViewModel.#ctor(DCS.User.User)">
            <summary>
            Default constuctor initializes a new instance of <see cref="T:DCS.User.UI.UserLoginViewModel"/>
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserLoginViewModel.LoginUser(System.String,System.String,System.String)">
            <summary>
            Checks if given user credentials equals to the data on the table.
            </summary>
            <param name="username">User name.</param>
            <param name="password">User raw password.</param>
            <returns>Wether the login was succesfull.</returns>
        </member>
        <member name="M:DCS.User.UI.UserLoginViewModel.SetItemsSource(System.String)">
            <summary>
            Sets the items source for the database selector in the <see cref="T:DCS.User.UI.UserLogin"/>
            </summary>
            <param name="connectionType">Network enviroment type.</param>
            <returns></returns>
        </member>
        <member name="P:DCS.User.UI.UserLoginViewModel.SelectedDB">
            <summary>
            Gets or sets the selected database as string.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserLoginViewModel.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserLoginViewModel.KeepLoggedIn">
            <summary>
            Indicates if a user shall be keep logged in.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserLoginViewModel.UserNames">
            <summary>
            Contains avialable user account names.
            </summary>
        </member>
        <member name="T:DCS.User.UI.UserManagementViewModel">
            <summary>
            ViewModel for the <see cref="T:DCS.User.UI.UserManagement"/> view.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserManagementViewModel.#ctor(DCS.User.User)">
            <summary>
            Default constructor initialize a new instance of <see cref="T:DCS.User.UI.UserManagementViewModel"/>.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserManagementViewModel.GetByName(System.String)">
            <summary>
            Gets a user by its user name.
            </summary>
            <param name="userName">Given user name.</param>
            <returns>User instance by its username.</returns>
        </member>
        <member name="P:DCS.User.UI.UserManagementViewModel.Guid">
            <summary>
            Gets or sets the unique identifier for the user.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserManagementViewModel.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserManagementViewModel.PassWord">
            <summary>
            Gets or sets the user password.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserManagementViewModel.IsAdmin">
            <summary>
            Gets or sets the user is admin flag.
            </summary>
        </member>
        <member name="T:DCS.User.UI.UserViewModel">
            <summary>
            Implements the <see cref="T:DCS.CoreLib.BaseClass.ViewModelBase`2"/> class for the <see cref="T:DCS.User.User"/> model.
            </summary>
        </member>
        <member name="F:DCS.User.UI.UserViewModel.groups">
            <summary>
            Contains all avialable user groups from the table.
            </summary>
        </member>
        <member name="F:DCS.User.UI.UserViewModel.organisations">
            <summary>
            Contains all avialable user organisations from the table.
            </summary>
        </member>
        <member name="F:DCS.User.UI.UserViewModel.roles">
            <summary>
            Contains all avialable user roles from the table.
            </summary>
        </member>
        <member name="F:DCS.User.UI.UserViewModel.userGroups">
            <summary>
            Contains all added user groups.
            </summary>
        </member>
        <member name="F:DCS.User.UI.UserViewModel.userOrganisations">
            <summary>
            Contains all added user organisations.
            </summary>
        </member>
        <member name="F:DCS.User.UI.UserViewModel.userRoles">
            <summary>
            Contains all added user roles.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserViewModel.#ctor(DCS.User.User)">
            <summary>
            Default constructor initialize a new instance of <see cref="T:DCS.User.UI.UserViewModel"/>.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserViewModel.Save">
            <summary>
            Saves the current instance of the <see cref="T:DCS.User.UI.UserViewModel"/> class.
            </summary>
            <returns>True if the save was successful; otherwise, false.</returns>
        </member>
        <member name="M:DCS.User.UI.UserViewModel.AddUserToGroup(DCS.User.Group)">
            <summary>
            Adds the current user to the specified group.
            </summary>
            <remarks>This method checks if the user is already a member of the specified group before
            attempting to add them. If the user is already a member or if the operation fails, the method returns <see
            langword="false"/>.</remarks>
            <param name="group">The group to which the user will be added. Cannot be <see langword="null"/>.</param>
            <returns><see langword="true"/> if the user was successfully added to the group; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.AllGroups">
            <summary>
            Contains all avialable user groups from the table.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.UserGroups">
            <summary>
            Contains all added user groups.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.AllOrganisations">
            <summary>
            Contains all avialable user organisations from the table.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.UserOrganisations">
            <summary>
            Contains all added user organisations.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.AllRoles">
            <summary>
            Contains all avialable user roles from the table.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.UserRoles">
            <summary>
            Contains all added user roles.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.Guid">
            <summary>
            Gets or sets the unique identifier for the user.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.Ident">
            <summary>
            Gets or sets the user identifier.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.UserName">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.PassWord">
            <summary>
            Gets or sets the user password.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.Domain">
            <summary>
            Gets or sets the user domain name.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.IsActive">
            <summary>
            Gets or sets the user is admin flag.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.KeepLoggedIn">
            <summary>
            Gets or sets the user keep logged in flag.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.IsAdmin">
            <summary>
            Gets or sets the user has admin rights flag.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.IsLoggedIn">
            <summary>
            Gets or sets the user is logged in in current session flag.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.IsADUser">
            <summary>
            Gets or sets the user is local user flag.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.CreationDate">
            <summary>
            Gets or sets the user creation date.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.SubstitutionEnd">
            <summary>
            Gets or sets the user substitution ending date.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserViewModel.LastManipulation">
            <summary>
            Gets or sets the user last manipulation date.
            </summary>
        </member>
        <member name="T:DCS.User.UI.RegistrateUser">
            <summary>
            Interaction logic for RegistrateUser.xaml
            </summary>
            <summary>
            RegistrateUser
            </summary>
        </member>
        <member name="M:DCS.User.UI.RegistrateUser.#ctor(System.String)">
            <summary>
            Default constructor for <see cref="T:DCS.User.UI.RegistrateUser"/>.
            </summary>
        </member>
        <member name="P:DCS.User.UI.RegistrateUser.DomainName">
            <summary>
            Gets or sets the domain name.
            </summary>
        </member>
        <member name="P:DCS.User.UI.RegistrateUser.NewRegistratedUser">
            <summary>
            Gets or sets the new registrated user.
            </summary>
        </member>
        <member name="M:DCS.User.UI.RegistrateUser.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.User.UI.UserEditor">
            <summary>
            Represents the editor window for <see cref="T:DCS.User.User"/> instances.
            </summary>
            <summary>
            UserEditor
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserEditor.#ctor(DCS.User.User)">
            <summary>
            Default constructor initialize a new <see cref="T:DCS.User.UI.UserEditor"/> window.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserEditor.Current">
            <summary>
            Returns the current instance of the <see cref="T:DCS.User.UI.UserViewModel"/> class as DataContext.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.User.UI.UserLogin">
            <summary>
            Interaction logic for UserLogin.xaml
            </summary>
            <summary>
            UserLogin
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserLogin.DomainNames">
            <summary>
            Represents the domain names for the database connection.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserLogin.#ctor">
            <summary>
            Default constructor to initializes a new instance of <see cref="T:DCS.User.UI.UserLogin"/>.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserLogin.Current">
            <summary>
            Represents the current data context for a user instance.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserLogin.LoggedInUser">
            <summary>
            Represents the current logged in user.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserLogin.SelectedDomain">
            <summary>
            Represents the current selected database.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserLogin.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.User.UI.UserManagement">
            <summary>
            Interaction logic for UserManagement.xaml
            </summary>
            <summary>
            UserManagement
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserManagement.#ctor">
            <summary>
            Default constructor for <see cref="T:DCS.User.UI.UserManagement"/>.
            </summary>
        </member>
        <member name="P:DCS.User.UI.UserManagement.Current">
            <summary>
            Returns the current instance of the <see cref="T:DCS.User.UI.UserManagementViewModel"/> class as DataContext.
            </summary>
        </member>
        <member name="M:DCS.User.UI.UserManagement.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.User.Viewmodels.RoleViewModel">
            <summary>
            Represents the ViewModel for the <see cref="T:DCS.User.Role"/> model. Implements the <see cref="T:DCS.CoreLib.BaseClass.ViewModelBase`2"/> class.
            </summary>
        </member>
        <member name="M:DCS.User.Viewmodels.RoleViewModel.#ctor(DCS.User.Role)">
            <summary>
            Default constructor to initialize a new instance of <see cref="T:DCS.User.Viewmodels.RoleViewModel"/>.
            </summary>
            <param name="role">Instance of <see cref="T:DCS.User.Role"/>.</param>
        </member>
        <member name="M:DCS.User.Viewmodels.RoleViewModel.Save">
            <summary>
            Saves the current instance of the <see cref="T:DCS.User.Viewmodels.RoleViewModel"/> class.
            </summary>
            <returns>True if the save was succesful; otherwise, false.</returns>
        </member>
        <member name="M:DCS.User.Viewmodels.RoleViewModel.GetAllActiveRoles">
            <summary>
            Gets all available active roles from the table.
            </summary>
            <returns>All avialable active roles from the table.</returns>
        </member>
        <member name="P:DCS.User.Viewmodels.RoleViewModel.Guid">
            <summary>
            Role unique identifier.
            </summary>
        </member>
        <member name="P:DCS.User.Viewmodels.RoleViewModel.Ident">
            <summary>
            Role ident.
            </summary>
        </member>
        <member name="P:DCS.User.Viewmodels.RoleViewModel.Name">
            <summary>
            Role name.
            </summary>
        </member>
        <member name="P:DCS.User.Viewmodels.RoleViewModel.Description">
            <summary>
            Role description.
            </summary>
        </member>
        <member name="P:DCS.User.Viewmodels.RoleViewModel.IsActive">
            <summary>
            Role is active flag.
            </summary>
        </member>
        <member name="P:DCS.User.Viewmodels.RoleViewModel.UserGuid">
            <summary>
            Role creator user unique identifier.
            </summary>
        </member>
        <member name="P:DCS.User.Viewmodels.RoleViewModel.CreationDate">
            <summary>
            Role creation date.
            </summary>
        </member>
        <member name="P:DCS.User.Viewmodels.RoleViewModel.LastManipulation">
            <summary>
            Role properties last time changed date.
            </summary>
        </member>
        <member name="T:DCS.User.Views.ChangeUserPassword">
            <summary>
            Interaction logic for ChangeUserPassword.xaml
            </summary>
            <summary>
            ChangeUserPassword
            </summary>
        </member>
        <member name="M:DCS.User.Views.ChangeUserPassword.#ctor(DCS.User.User)">
            <summary>
            Default constructor initialize a new <see cref="T:DCS.User.Views.ChangeUserPassword"/> window.
            </summary>
            <param name="user">Selected user.</param>
        </member>
        <member name="M:DCS.User.Views.ChangeUserPassword.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:DCS.User.Views.GroupManagement">
            <summary>
            Interaction logic for GroupManagement.xaml
            </summary>
            <summary>
            GroupManagement
            </summary>
        </member>
        <member name="M:DCS.User.Views.GroupManagement.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
